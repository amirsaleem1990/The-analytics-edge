census  <- read.csv("../data/census.csv")
census  <- read.csv("../data/census.csv")
set.seed(2000)
library(caTools)
spl  <- sample.split(census, SplitRatio = 0.6)
Train <- subset(census, spl == TRUE)
Test <- subset(census, spl == FALSE)
model  <- glm(over50k ~ ., data= Train, family = binomial)
predTest <- predict(model, newdata = Test, type="response")
table(Test$over50k, predTest >= 0.5)
(10421+21223)/(10421+777+1439+2123)
(10421+2123)/(10421+777+1439+2123)
table(Test$over50k)
11198/(11198+3562)
library(rpart)
library(rpart.plot)
cartModel <- rpart(over50k ~ ., data=Train, method="class")
cartModel
cartModel$splits
a = predict(cartModel, newdata = Test, type = "response")
# set.seed(2000)
# library(caTools)
# spl  <- sample.split(census, SplitRatio = 0.6)
# Train <- subset(census, spl == TRUE)
# Test <- subset(census, spl == FALSE)
# model  <- glm(over50k ~ ., data= Train, family = binomial)
# predTest <- predict(model, newdata = Test, type="response")
# library(rpart)
# library(rpart.plot)
# cartModel <- rpart(over50k ~ ., data=Train, method="class")
a = predict(cartModel, newdata = Test)
a
table(Test$over50k, a)
table(Test$over50k, a>5)
length(a)
length(Test)
length(Test$over50k)
a = predict(cartModel, newdata = Test)
(auc = as.numeric(performance(cartModel, "auc")@y.values))
library(ROCR)
a = predict(cartModel, newdata = Test)
(auc = as.numeric(performance(cartModel, "auc")@y.values))
PredictCart <- predict(cartModel, newdata = Test, type = "class")
table(Test$over50k, PredictCart)
(10531+1891) / (10531+1672+667+1890)
set.seed(1)
trainSmall = census[sample(nrow(census), 2000), ]
set.seed(1)
library(randomForest)
tevensForest  <- randomForest(over50k ~ ., data= trainSmall)#, nodesize = 25, ntree = 200
set.seed(1)
trainSmall = census[sample(nrow(census), 2000), ]
set.seed(1)
library(randomForest)
tevensForest  <- randomForest(over50k ~ ., data= trainSmall)#, nodesize = 25, ntree = 200
data= Test)
table(Test$over50k, predictionsForest >= 0.5)
predictionsForest = predict(censusForest, newdata= Test)
table(Test$over50k, predictionsForest >= 0.5)
predictionsForest = predict(censusForest, newdata= Test)
# library(rpart)
# library(rpart.plot)
# library(ROCR)
# census  <- read.csv("../data/census.csv")
# set.seed(2000)
# library(caTools)
# spl  <- sample.split(census, SplitRatio = 0.6)
# Train <- subset(census, spl == TRUE)
# Test <- subset(census, spl == FALSE)
# model  <- glm(over50k ~ ., data= Train, family = binomial)
# predTest <- predict(model, newdata = Test, type="response")
# cartModel <- rpart(over50k ~ ., data=Train, method="class")
# PredictCart <- predict(cartModel, newdata = Test, type = "class")
# table(Test$over50k, PredictCart)
# set.seed(1)
# trainSmall = census[sample(nrow(census), 2000), ]
# set.seed(1)
# library(randomForest)
censusForest  <- randomForest(over50k ~ ., data= trainSmall)#, nodesize = 25, ntree = 200
predictionsForest = predict(censusForest, newdata= Test)
table(Test$over50k, predictionsForest >= 0.5)
table(Test$over50k, predictionsForest >= 0.5)
table(Test$over50k, predictionsForest => 0.5)
table(Test$over50k, predictionsForest > 0.5)
predictionsForest
trainSmall$over50k <- as.factor(trainSmall$over50k)
Test$over50k <- as.factor(Test$over50k)
censusForest  <- randomForest(over50k ~ ., data= trainSmall)#, nodesize = 25, ntree = 200
predictionsForest = predict(censusForest, newdata= Test)
table(Test$over50k, predictionsForest > 0.5)
trainSmall$over50k <- as.factor(trainSmall$over50k)
Test$over50k <- as.factor(Test$over50k)
censusForest  <- randomForest(over50k ~ ., data= trainSmall)#, nodesize = 25, ntree = 200
predictionsForest = predict(censusForest, newdata= Test)
table(Test$over50k, predictionsForest)
(10312+2366)/(10312+886+1196+2366)
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
censusTestMM
dim(censusTestMM)
dim(Test)
colnames(censusTestMM)
str(Test$over50k)
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
library(caret)
library(e1071)
numFolds = trainControl( method = "cv", number = 10 )
cpGrid = expand.grid( .cp = seq(0.01,0.5,0.01))
train(over50k ~ ., data = Train, censusTestMM = "rpart",
trControl = numFolds, tuneGrid = cpGrid )
Test <- subset(census, spl == FALSE)
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
library(caret)
library(e1071)
numFolds = trainControl( method = "cv", number = 10 )
cpGrid = expand.grid( .cp = seq(0.01,0.5,0.01))
train(over50k ~ ., data = Train, censusTestMM = "rpart",
trControl = numFolds, tuneGrid = cpGrid )
str(Test$over50k)
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
library(caret)
library(e1071)
numFolds = trainControl( method = "cv", number = 10 )
cpGrid = expand.grid( .cp = seq(0.01,0.5,0.01))
train(over50k ~ ., data = trainSmall, censusTestMM = "rpart",
trControl = numFolds, tuneGrid = cpGrid )
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
library(caret)
library(e1071)
numFolds = trainControl( method = "cv", number = 10 )
cpGrid = expand.grid( .cp = seq(0.01,0.5,0.01))
train(over50k ~ ., data = trainSmall,method = "rpart",
trControl = numFolds, tuneGrid = cpGrid )
final_cart = rpart(over50k ~ ., data = trainSmall, method="class", cp = 0.02)
PredictCV = predict(final_cart, newdata = censusTestMM, type = "class")
PredictCV = predict(final_cart, newdata = censusTestMM, type = "class")
final_cart = rpart(over50k ~ ., data = censusTestMM, method="class", cp = 0.02)
library(caret)
library(e1071)
numFolds = trainControl( method = "cv", number = 10 )
cartGrid <- data.frame( .cp = seq(0.002,0.092,0.01))
set.seed(2)
train(over50k ~ ., data = Train,method = "rpart",
trControl = numFolds, tuneGrid = cartGrid )
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
censusTrainMM = as.data.frame(model.matrix(over50k~.+0, data=Train))
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
censusTestMM$`workclass ?`
censusTestMM$`workclass ?`
names(censusTestMM$)
colnames(censusTestMM$)
colnames(censusTestMM)
a = train(over50k ~ ., data = Train,method = "rpart",
trControl = numFolds, tuneGrid = cartGrid )
a
cartCV = train(over50k ~ ., data = Train,method = "rpart",
trControl = numFolds, tuneGrid = cartGrid )
model <- cartCV$final
model <- cartCV$final
censusTestMM = as.data.frame(model.matrix(over50k~.+0, data=Test))
predictTest = predict(model, newdata=censusTestMM, type="class")
table(censusTest$over50k, predictTest)
table(Test$over50k, predictTest)
(10490+2085)/(10490+708+1477+2085)
plot(model)
prp(model)
